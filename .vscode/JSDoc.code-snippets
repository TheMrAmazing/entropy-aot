{
	// Place your entropy-aot workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// },
	"Typed let": {
		"scope": "javascript,typescript",
		"prefix": "let",
		"body": ["/**@type {${1}}*/ let $0"]
	},
	"Typed const": {
		"scope": "javascript,typescript",
		"prefix": "const",
		"body": ["/**@type {${1}}*/ const $0"]
	},
	"string type": {
		"scope": "javascript,typescript",
		"prefix": "string",
		"body": ["/**@type {string${1}}*/ $0"]
	},
	"number type": {
		"scope": "javascript,typescript",
		"prefix": "number",
		"body": ["/**@type {number${1}}*/ $0"]
	},
	"boolean type": {
		"scope": "javascript,typescript",
		"prefix": "boolean",
		"body": ["/**@type {boolean${1}}*/ $0"]
	},
	"any type": {
		"scope": "javascript,typescript",
		"prefix": "any",
		"body": ["/**@type {any${1}}*/ $0"]
	},
	"Map type": {
		"scope": "javascript,typescript",
		"prefix": "Map",
		"body": ["/**@type {Map<${1}>}*/ $0"]
	},
	"return type": {
		"scope": "javascript,typescript",
		"prefix": "@return",
		"body": ["/**@return {${1}}*/ $0"]
	}
}